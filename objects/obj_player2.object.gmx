<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_miadown</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>msk_mia</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>points = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>sound_play(snd_death);
instance_create(x,y,obj_death0mw);
instance_create(x,y,obj_death45mw);
instance_create(x,y,obj_death90mw);
instance_create(x,y,obj_death135mw);
instance_create(x,y,obj_death180mw);
instance_create(x,y,obj_death225mw);
instance_create(x,y,obj_death270mw);
instance_create(x,y,obj_death315mw);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var left = keyboard_check(vk_left);
var right = keyboard_check(vk_right);
var up = keyboard_check(vk_up);
var down = keyboard_check(vk_down);
var hMove = (right - left) * 4;
var vMove = (down - up) * 4;
if(place_free(x + hMove, y))
{
x += hMove;
}
if(place_free(x , y+ vMove))
{
y += vMove;
}
move_wrap(true, true, 32);
if(keyboard_check(vk_up))
{
    sprite_index = spr_miaup;
    if(keyboard_check(vk_right))
    {
        image_xscale = 1;
        sprite_index = spr_miaupright;
    }
    if(keyboard_check(vk_left))
    {
        image_xscale = -1;
        sprite_index = spr_miaupright;
    }
}

if(keyboard_check(vk_down))
{
    sprite_index = spr_miadown;
    if(keyboard_check(vk_right))
    {
    image_xscale = 1;
    sprite_index = spr_miastand;
    }
    if(keyboard_check(vk_left))
    {
    image_xscale = -1;
    sprite_index = spr_miastand;
    }
}

if(keyboard_check(vk_left))
{
    image_xscale = -1;
    sprite_index = spr_miaright;
    if(keyboard_check(vk_up))
    {
        image_xscale = -1;
        sprite_index = spr_miaupright;
    }
    if(keyboard_check(vk_down))
    {
        image_xscale = -1;
        sprite_index = spr_miastand;
    }
}
if(keyboard_check(vk_right))
{
    image_xscale = 1;
    sprite_index = spr_miaright;
    if(keyboard_check(vk_up))
    {
        image_xscale = 1;
        sprite_index = spr_miaupright;
    }
    if(keyboard_check(vk_down))
    {
        image_xscale = 1;
        sprite_index = spr_miastand;
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_self();
draw_set_halign(fa_center);
draw_set_valign(fa_middle);
draw_set_font(fnt_8Bit);
draw_set_color(c_blue);
draw_text(x, y, points);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
