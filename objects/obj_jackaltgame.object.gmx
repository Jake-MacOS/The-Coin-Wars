<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_jackstand</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>msk_jack</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>dir = 1;
firedelay = -1;
instance_create(0,0,obj_debug)
hsp = 0;
vsp = 0;
grv = 0.25;
walksp = 1.296875;
missledelay = -3;
image_speed = 0;
image_index = spr_jackstand;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>key_left = keyboard_check(vk_left);
key_right = keyboard_check(vk_right);
key_fire = keyboard_check_pressed(ord("Z"));
key_jump = keyboard_check_pressed(ord("X"));
//move
var move = key_right - key_left;

hsp = move * walksp;

vsp = vsp + grv;



if (place_meeting(x,y+1,obj_wall)) &amp;&amp; (key_jump)
{
vsp = -4.75
}

//gravity
if (place_meeting(x+hsp,y,obj_wall))
{
while (!place_meeting(x+sign(hsp),y,obj_wall))
{
x = x + sign(hsp);
}
hsp = 0;
}
x = x + hsp;
//logic if you run into a wall
if (place_meeting(x,y+vsp,obj_wall))
{
while (!place_meeting(x,y+sign(vsp),obj_wall))
{
y = y + sign(vsp);
}
vsp = 0;
}
y = y + vsp;

//moving
if (!place_meeting(x,y+1,obj_wall))
{
sprite_index = spr_jackjump;
image_speed = 0;
if (sign(vsp) &gt; 0) image_index = 0; else image_index = 0;

}
else
{
image_speed = 0.13;
if (hsp == 0)
{
sprite_index = spr_jackstand;
}
else
{
sprite_index = spr_jackrun;
}
}

if (hsp != 0) image_xscale = sign(hsp);


/*
if (move &lt; 0)
{
image_xscale = -1;
if (place_meeting(x, y+1, obj_wall))
{
image_speed = 4;
}
else
image_speed = 0;
}
else if (move &gt; 0)
{
image_xscale = 1;
if (place_meeting(x, y+1, obj_wall))
{
image_speed = 1;
}
else
image_speed = 0;
}
else
{
image_speed = 0;
image_index = spr_strongmia;
}
*/
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>x = 128;
y = 64;
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
